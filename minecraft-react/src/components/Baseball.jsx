/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/baseball/baseball_01_4k.gltf -r public
*/

import React, { useRef, useState, useEffect } from 'react'
import { useGLTF, PerspectiveCamera  } from '@react-three/drei'
import { useSphere  } from '@react-three/cannon';
import * as cannon from "@react-three/cannon";
import { useFrame } from "@react-three/fiber"
export function Baseball(props) {
  const { nodes, materials } = useGLTF('/baseball/baseball_01_4k.gltf')
 
  const [ref, api] = useSphere(() => ({
    mass: 1,
    position: [5, 1, 0],
    material: {
      friction: 1,
    },
    angularDamping: 0.7,
    onCollide: (e) => {
      if (e.body.userData.type === 'player') {
        api.velocity.set(0, 0, 0);
      }
    },
  }));
  console.log(api.material);
  

  return (
    <group ref={ref} {...props} dispose={null} scale={30}>
      <mesh geometry={nodes.baseball_01.geometry}  material={materials.baseball_01} />
    </group>
  )
}

useGLTF.preload('/baseball/baseball_01_4k.gltf')
